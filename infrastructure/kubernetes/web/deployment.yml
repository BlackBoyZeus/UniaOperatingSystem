apiVersion: apps/v1
kind: Deployment
metadata:
  name: tald-web
  namespace: tald-unia
  labels:
    app: tald-web
    component: frontend
    version: 1.0.0
    environment: production
  annotations:
    kubernetes.io/change-cause: "Initial deployment of web frontend"
    deployment.kubernetes.io/revision: "1"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"

spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: tald-web

  template:
    metadata:
      labels:
        app: tald-web
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        checksum/config: "${CONFIG_CHECKSUM}"

    spec:
      containers:
      - name: tald-web
        image: tald-web:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: web-config
              key: api_base_url
        - name: VITE_WEBRTC_SIGNALING_URL
          valueFrom:
            configMapKeyRef:
              name: web-config
              key: webrtc_signaling_url

        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"

        livenessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /startup
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30

        volumeMounts:
        - name: web-config
          mountPath: /usr/share/nginx/html/config
          readOnly: true
        - name: nginx-cache
          mountPath: /var/cache/nginx

      volumes:
      - name: web-config
        configMap:
          name: web-config
      - name: nginx-cache
        emptyDir: {}

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tald-web
              topologyKey: kubernetes.io/hostname

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tald-web-hpa
  namespace: tald-unia
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tald-web
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 180