# Grafana v9.5.3 Kubernetes Configuration
# Provides monitoring visualization and dashboarding for TALD UNIA platform

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: tald-unia
  labels:
    app: grafana
    component: monitoring
    part-of: tald-unia
data:
  GF_SECURITY_ADMIN_USER: admin
  GF_AUTH_ANONYMOUS_ENABLED: "false"
  GF_DASHBOARDS_MIN_REFRESH_INTERVAL: "10s"
  GF_USERS_ALLOW_SIGN_UP: "false"
  GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel,grafana-heatmap-panel,grafana-polystat-panel
  GF_SECURITY_ALLOW_EMBEDDING: "true"
  GF_METRICS_ENABLED: "true"
  GF_LOG_LEVEL: info
  GF_ANALYTICS_REPORTING_ENABLED: "false"

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: tald-unia
  labels:
    app: grafana
    component: monitoring
    part-of: tald-unia
spec:
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: grafana
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: tald-unia
  labels:
    app: grafana
    component: monitoring
    part-of: tald-unia
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname
      containers:
        - name: grafana
          image: grafana/grafana:9.5.3
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
          envFrom:
            - configMapRef:
                name: grafana-config
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            runAsUser: 472
            runAsGroup: 472
            allowPrivilegeEscalation: false
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards