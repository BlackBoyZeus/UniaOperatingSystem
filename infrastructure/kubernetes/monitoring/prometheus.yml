---
# Prometheus ConfigMap containing main configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: tald-unia
  labels:
    app: prometheus
    component: monitoring
    part-of: tald-unia
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      scrape_timeout: 10s

    rule_files:
      - /etc/prometheus/alerts.yml
      - /etc/prometheus/rules.yml

    scrape_configs:
      - job_name: 'lidar-metrics'
        metrics_path: /metrics
        scrape_interval: 5s
        static_configs:
          - targets: ['lidar-service:9090']

      - job_name: 'fleet-metrics'
        metrics_path: /metrics
        scrape_interval: 5s
        static_configs:
          - targets: ['fleet-service:9090']

      - job_name: 'security-metrics'
        metrics_path: /metrics
        scrape_interval: 10s
        static_configs:
          - targets: ['security-service:9090']

---
# Prometheus Service for internal access
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: tald-unia
  labels:
    app: prometheus
    component: monitoring
    part-of: tald-unia
spec:
  ports:
    - name: http
      port: 9090
      targetPort: 9090
  selector:
    app: prometheus
  type: ClusterIP

---
# Prometheus Deployment
apiVersion: v1
kind: Deployment
metadata:
  name: prometheus
  namespace: tald-unia
  labels:
    app: prometheus
    component: monitoring
    part-of: tald-unia
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=15d
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
            - name: prometheus-storage
              mountPath: /prometheus
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 1000m
              memory: 4Gi
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-storage